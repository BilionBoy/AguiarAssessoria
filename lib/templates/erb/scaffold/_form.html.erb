<%%= simple_form_for @<%= singular_table_name %>, html: { class: "modern-form" }, data: { turbo: false } do |f| %>
<%% if @<%= singular_table_name %>.errors.any? %>
<div class="alert alert-danger" role="alert" style="margin-bottom: 24px; padding: 16px; background: #fef2f2; border: 1px solid #fecaca; border-radius: 8px; color: #dc2626;">
  <div style="display: flex; align-items: center; gap: 8px; margin-bottom: 8px;">
    <i data-lucide="alert-circle" style="width: 20px; height: 20px;"></i>
    <strong><%%= pluralize(@<%= singular_table_name %>.errors.count, "erro") %> encontrado<%= plural_table_name.size > 1 ? 's' : '' %>:</strong>
  </div>
  <ul style="margin: 0; padding-left: 20px;">
    <%% @<%= singular_table_name %>.errors.full_messages.each do |message| %>
    <li><%%= message %></li>
    <%% end %>
  </ul>
</div>
<%% end %>
<% if attributes.reject(&:password_digest?).length > 6 -%>
  <!-- Multi-step Wizard Form -->
  <div class="form-wizard">
    <!-- Wizard Header -->
    <div class="wizard-header" style="margin-bottom: 32px; padding: 24px; background: white; border-radius: 12px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
      <div class="wizard-steps" style="display: flex; justify-content: center; gap: 32px; margin-bottom: 16px;">
        <div class="wizard-step active" data-step="1" style="display: flex; flex-direction: column; align-items: center; gap: 8px; cursor: pointer;">
          <div class="step-number" style="width: 40px; height: 40px; border-radius: 50%; background: #3b82f6; color: white; display: flex; align-items: center; justify-content: center; font-weight: 600;">1</div>
          <span style="font-size: 14px; color: #6b7280;">Informações Básicas</span>
        </div>
        <div class="wizard-step" data-step="2" style="display: flex; flex-direction: column; align-items: center; gap: 8px; cursor: pointer;">
          <div class="step-number" style="width: 40px; height: 40px; border-radius: 50%; background: #e5e7eb; color: #6b7280; display: flex; align-items: center; justify-content: center; font-weight: 600;">2</div>
          <span style="font-size: 14px; color: #6b7280;">Detalhes Adicionais</span>
        </div>
      </div>
      <div class="wizard-progress" style="height: 4px; background: #e5e7eb; border-radius: 2px; overflow: hidden;">
        <div class="wizard-progress-bar" style="height: 100%; background: #3b82f6; width: 50%; transition: width 0.3s ease;"></div>
      </div>
    </div>
    <!-- Step 1: Basic Information -->
    <div class="wizard-step-content active" id="step1" style="background: white; padding: 32px; border-radius: 12px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
      <h3 style="margin: 0 0 24px 0; font-size: 20px; font-weight: 600; color: #111827; display: flex; align-items: center; gap: 12px;">
        <i data-lucide="info" style="width: 24px; height: 24px; color: #3b82f6;"></i>
        Informações Básicas
      </h3>
      <div class="form-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 24px;">
        <%# Using f.input and f.association for first half of fields %>
        <% attributes.reject(&:password_digest?).first(attributes.length / 2).each do |attribute| -%>
          <% if attribute.name.end_with?('_id') || attribute.name.start_with?('g_') -%>
            <%# Improved detection for both _id fields and g_ prefixed fields %>
            <% association_name = attribute.name.end_with?('_id') ? attribute.name.gsub('_id', '') : attribute.name %>
            <% model_class = association_name.camelize %>
            <%%= f.association :<%= association_name %>, collection: <%= model_class %>.all, label_method: :nome, value_method: :id, prompt: "Selecione <%= attribute.human_name.downcase %>", input_html: { class: "form-select" } %>
          <% elsif attribute.field_type == :text_area -%>
            <%%= f.input :<%= attribute.name %>, as: :text, placeholder: "Digite <%= attribute.human_name.downcase %>..." %>
          <% elsif attribute.field_type == :check_box -%>
            <%%= f.input :<%= attribute.name %>, as: :boolean, label: "<%= attribute.human_name %>?" %>
          <% elsif attribute.field_type == :datetime_local_field -%>
            <%%= f.input :<%= attribute.name %>, as: :datetime, placeholder: "Selecione data e hora..." %>
          <% elsif attribute.field_type == :date_field -%>
            <%%= f.input :<%= attribute.name %>, as: :date %>
          <% elsif attribute.field_type == :number_field -%>
            <%%= f.input :<%= attribute.name %>, as: :integer, placeholder: "Digite <%= attribute.human_name.downcase %>..." %>
          <% else -%>
            <%%= f.input :<%= attribute.name %>, placeholder: "Digite <%= attribute.human_name.downcase %>..." %>
          <% end -%>
        <% end -%>
      </div>
    </div>
    <!-- Step 2: Additional Details -->
    <div class="wizard-step-content" id="step2" style="display: none; background: white; padding: 32px; border-radius: 12px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
      <h3 style="margin: 0 0 24px 0; font-size: 20px; font-weight: 600; color: #111827; display: flex; align-items: center; gap: 12px;">
        <i data-lucide="settings" style="width: 24px; height: 24px; color: #3b82f6;"></i>
        Detalhes Adicionais
      </h3>
      <div class="form-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 24px;">
        <%# Using f.input and f.association for second half of fields %>
        <% attributes.reject(&:password_digest?).drop(attributes.length / 2).each do |attribute| -%>
          <% if attribute.name.end_with?('_id') || attribute.name.start_with?('g_') -%>
            <%# Improved detection for both _id fields and g_ prefixed fields %>
            <% association_name = attribute.name.end_with?('_id') ? attribute.name.gsub('_id', '') : attribute.name %>
            <% model_class = association_name.camelize %>
            <%%= f.association :<%= association_name %>, collection: <%= model_class %>.all, label_method: :nome, value_method: :id, prompt: "Selecione <%= attribute.human_name.downcase %>", input_html: { class: "form-select" } %>
          <% elsif attribute.field_type == :text_area -%>
            <%%= f.input :<%= attribute.name %>, as: :text, placeholder: "Digite <%= attribute.human_name.downcase %>..." %>
          <% elsif attribute.field_type == :check_box -%>
            <%%= f.input :<%= attribute.name %>, as: :boolean, label: "<%= attribute.human_name %>?" %>
          <% elsif attribute.field_type == :datetime_local_field -%>
            <%%= f.input :<%= attribute.name %>, as: :datetime, placeholder: "Selecione data e hora..." %>
          <% elsif attribute.field_type == :date_field -%>
            <%%= f.input :<%= attribute.name %>, as: :date %>
          <% elsif attribute.field_type == :number_field -%>
            <%%= f.input :<%= attribute.name %>, as: :integer, placeholder: "Digite <%= attribute.human_name.downcase %>..." %>
          <% else -%>
            <%%= f.input :<%= attribute.name %>, placeholder: "Digite <%= attribute.human_name.downcase %>..." %>
          <% end -%>
        <% end -%>
      </div>
    </div>
    <!-- Wizard Actions -->
    <div class="wizard-actions" style="display: flex; justify-content: space-between; align-items: center; margin-top: 32px; padding: 24px; background: white; border-radius: 12px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
      <button type="button" class="btn-secondary" id="prevBtn" style="display: none; padding: 12px 24px; border: 1px solid #d1d5db; background: white; color: #374151; border-radius: 8px; font-weight: 500; cursor: pointer; transition: all 0.2s; display: flex; align-items: center; gap: 8px;">
        <i data-lucide="chevron-left" style="width: 16px; height: 16px;"></i>
        Anterior
      </button>
      <div style="display: flex; gap: 12px;">
        <%%= link_to <%= index_helper %>_path, class: "btn-secondary", style: "padding: 12px 24px; border: 1px solid #d1d5db; background: white; color: #374151; border-radius: 8px; font-weight: 500; text-decoration: none; display: flex; align-items: center; gap: 8px; transition: all 0.2s;" do %>
        <i data-lucide="x" style="width: 16px; height: 16px;"></i>
        Cancelar
        <%% end %>
        <button type="button" class="btn-primary" id="nextBtn" style="padding: 12px 24px; background: #3b82f6; color: white; border: none; border-radius: 8px; font-weight: 500; cursor: pointer; transition: all 0.2s; display: flex; align-items: center; gap: 8px;">
          Próximo
          <i data-lucide="chevron-right" style="width: 16px; height: 16px;"></i>
        </button>
        <%%= f.submit "Salvar <%= human_name %>", class: "btn-primary", id: "submitBtn", style: "display: none; padding: 12px 24px; background: #10b981; color: white; border: none; border-radius: 8px; font-weight: 500; cursor: pointer; transition: all 0.2s;" %>
      </div>
    </div>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      let currentStep = 1;
      const totalSteps = 2;

      function showStep(step) {
        // Hide all step contents
        document.querySelectorAll('.wizard-step-content').forEach(content => {
          content.style.display = 'none';
        });

        // Show current step
        const currentContent = document.getElementById(`step${step}`);
        if (currentContent) {
          currentContent.style.display = 'block';
        }

        // Update step indicators
        document.querySelectorAll('.wizard-step').forEach((stepEl, index) => {
          const stepNumber = stepEl.querySelector('.step-number');
          stepEl.classList.remove('active', 'completed');

          if (index + 1 < step) {
            stepEl.classList.add('completed');
            stepNumber.style.background = '#10b981';
            stepNumber.style.color = 'white';
          } else if (index + 1 === step) {
            stepEl.classList.add('active');
            stepNumber.style.background = '#3b82f6';
            stepNumber.style.color = 'white';
          } else {
            stepNumber.style.background = '#e5e7eb';
            stepNumber.style.color = '#6b7280';
          }
        });

        // Update progress bar
        const progress = ((step - 1) / (totalSteps - 1)) * 100;
        const progressBar = document.querySelector('.wizard-progress-bar');
        if (progressBar) {
          progressBar.style.width = `${progress}%`;
        }

        // Control buttons
        const prevBtn = document.getElementById('prevBtn');
        const nextBtn = document.getElementById('nextBtn');
        const submitBtn = document.getElementById('submitBtn');

        if (prevBtn) prevBtn.style.display = step > 1 ? 'flex' : 'none';
        if (nextBtn) nextBtn.style.display = step < totalSteps ? 'flex' : 'none';
        if (submitBtn) submitBtn.style.display = step === totalSteps ? 'block' : 'none';
      }

      // Next button
      const nextBtn = document.getElementById('nextBtn');
      if (nextBtn) {
        nextBtn.addEventListener('click', () => {
          if (currentStep < totalSteps) {
            currentStep++;
            showStep(currentStep);
          }
        });
      }

      // Previous button
      const prevBtn = document.getElementById('prevBtn');
      if (prevBtn) {
        prevBtn.addEventListener('click', () => {
          if (currentStep > 1) {
            currentStep--;
            showStep(currentStep);
          }
        });
      }

      // Step click navigation
      document.querySelectorAll('.wizard-step').forEach((step, index) => {
        step.addEventListener('click', () => {
          currentStep = index + 1;
          showStep(currentStep);
        });
      });

      // Form input focus effects
      document.querySelectorAll('.form-input').forEach(input => {
        input.addEventListener('focus', function() {
          this.style.borderColor = '#3b82f6';
          this.style.boxShadow = '0 0 0 3px rgba(59, 130, 246, 0.1)';
        });

        input.addEventListener('blur', function() {
          this.style.borderColor = '#d1d5db';
          this.style.boxShadow = 'none';
        });
      });

      // Initialize first step
      showStep(1);
    });
  </script>
<% else -%>
  <!-- Simple Single Form -->
  <div class="simple-form" style="background: white; padding: 32px; border-radius: 12px; box-shadow: 0 1px 3px rgba(0,0,0,0.1);">
    <div class="form-header" style="margin-bottom: 32px; padding-bottom: 24px; border-bottom: 1px solid #e5e7eb;">
      <h2 style="margin: 0; font-size: 24px; font-weight: 600; color: #111827;">
        <%%= @<%= singular_table_name %>.persisted? ? "Editar" : "Novo" %> <%= human_name %>
      </h2>
      <p style="margin: 8px 0 0 0; color: #6b7280; font-size: 14px;">
        Preencha os campos abaixo para <%%= @<%= singular_table_name %>.persisted? ? "atualizar" : "cadastrar" %> <%= human_name.downcase %>.
      </p>
    </div>
    <div class="form-grid" style="display: grid; grid-template-columns: repeat(auto-fit, minmax(300px, 1fr)); gap: 24px;">
      <%# Using f.input and f.association for all fields in simple form %>
      <% attributes.reject(&:password_digest?).each do |attribute| -%>
        <% if attribute.name.end_with?('_id') || attribute.name.start_with?('g_') -%>
          <%# Improved detection for both _id fields and g_ prefixed fields %>
          <% association_name = attribute.name.end_with?('_id') ? attribute.name.gsub('_id', '') : attribute.name %>
          <% model_class = association_name.camelize %>
          <%%= f.association :<%= association_name %>, collection: <%= model_class %>.all, label_method: :nome, value_method: :id, prompt: "Selecione <%= attribute.human_name.downcase %>", input_html: { class: "form-select" } %>
        <% elsif attribute.field_type == :text_area -%>
          <%%= f.input :<%= attribute.name %>, as: :text, placeholder: "Digite <%= attribute.human_name.downcase %>..." %>
        <% elsif attribute.field_type == :check_box -%>
          <%%= f.input :<%= attribute.name %>, as: :boolean, label: "<%= attribute.human_name %>?" %>
        <% elsif attribute.field_type == :datetime_local_field -%>
          <%%= f.input :<%= attribute.name %>, as: :datetime, placeholder: "Selecione data e hora..." %>
        <% elsif attribute.field_type == :date_field -%>
          <%%= f.input :<%= attribute.name %>, as: :date %>
        <% elsif attribute.field_type == :number_field -%>
          <%%= f.input :<%= attribute.name %>, as: :integer, placeholder: "Digite <%= attribute.human_name.downcase %>..." %>
        <% else -%>
          <%%= f.input :<%= attribute.name %>, placeholder: "Digite <%= attribute.human_name.downcase %>..." %>
        <% end -%>
      <% end -%>
    </div>
    <div class="form-actions" style="display: flex; justify-content: flex-end; gap: 12px; margin-top: 32px; padding-top: 24px; border-top: 1px solid #e5e7eb;">
      <%%= link_to <%= index_helper %>_path, class: "btn-secondary", style: "padding: 12px 24px; border: 1px solid #d1d5db; background: white; color: #374151; border-radius: 8px; font-weight: 500; text-decoration: none; display: flex; align-items: center; gap: 8px; transition: all 0.2s;" do %>
      <i data-lucide="x" style="width: 16px; height: 16px;"></i>
      Cancelar
      <%% end %>
      <%%= f.submit "Salvar <%= human_name %>", class: "btn-primary", style: "padding: 12px 24px; background: #10b981; color: white; border: none; border-radius: 8px; font-weight: 500; cursor: pointer; transition: all 0.2s; display: flex; align-items: center; gap: 8px;" %>
    </div>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Form input focus effects
      document.querySelectorAll('.form-input').forEach(input => {
        input.addEventListener('focus', function() {
          this.style.borderColor = '#3b82f6';
          this.style.boxShadow = '0 0 0 3px rgba(59, 130, 246, 0.1)';
        });

        input.addEventListener('blur', function() {
          this.style.borderColor = '#d1d5db';
          this.style.boxShadow = 'none';
        });
      });

      // Button hover effects
      document.querySelectorAll('.btn-primary, .btn-secondary').forEach(btn => {
        btn.addEventListener('mouseenter', function() {
          if (this.classList.contains('btn-primary')) {
            this.style.background = '#2563eb';
          } else {
            this.style.background = '#f9fafb';
          }
        });

        btn.addEventListener('mouseleave', function() {
          if (this.classList.contains('btn-primary')) {
            this.style.background = '#10b981';
          } else {
            this.style.background = 'white';
          }
        });
      });
    });
  </script>
<% end -%>
<%% end %>
